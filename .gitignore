#
# .gitIGNORE
#
# Created by https://www.gitignore.io/api/vim,rust,macos,sublimetext
# Edit at https://www.gitignore.io/?templates=vim,rust,macos,sublimetext
#
# ID: $Gcid$
#
# BOKUGAKANGAETA SAIKYOUNO .gitignore
#
# --- Agenda:
# 1. OS-level
# 2. Dev lang-level
# 3. Editor-level
# 4. Middleware-level
#

## 1. OS level
# OSの環境依存ファイル。Windows, Linux, macOS それぞれの由来があるが、
# 開発環境として行儀が悪い windows から余計なファイルのpushを排除できれば
# あとは大丈夫と思える。

## 1.1. Windows
## -----------------------------------------------------------------------
# Windows thumbnail cache files 
# サムネのファイル形式だけで後何種類あるの？
Thumbs.db
ehthumbs.db
ehthumbs_vista.db

# Dump file
*.stackdump

# Folder config file
[Dd]esktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msix
*.msm
*.msp

# Windows shortcuts
*.lnk

## 1.2. Linux
## -----------------------------------------------------------------------
*~

# temporary files which can be created if a process still has a handle
# open of a deleted file
.fuse_hidden*

# KDE directory preferences
.directory

# Linux trash folder which might appear on any partition or disk
.Trash-*

# .nfs files are created when an open file is removed but is still being
# accessed
.nfs*


## 1.3. macOS, OSX
## -----------------------------------------------------------------------
.DS_Store
.AppleDouble
.LSOverride

### macOS icon must end with two ¥r (carriage return)
Icon

### macOS have many thumbnail files
._*

### macOS use files listed below as a Root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

### macOS use directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
#|特に.AppleDBはroot権限で作られるファイルで削除も面倒
Network Trash Folder
Temporary Items
.apdisk

## 2. DevLang level

## Rust, rust-lang
## -----------------------------------------------------------------------
## Generated by Cargo, will have compiled files and executables
/target/

# Remove Cargo.lock from .gitIGNORE if creating an executable. leave it 
# for libraries. you can get more detail information at:
# https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
# Cargo.lock
# ライブラリのバージョン依存関係が非常に狭くて柔軟性がないなら、Cargo.lock は git
# で管理した方が良い。でないと、[dependencies] に膨大な量のパッケージと、動作する
# ことが確認できているバージョンの一覧を書かなくてはならなくなる。

# these are backup files generated by rustfmt. you can use it by typing
# `cargo install rustfmt` (rustfmt が生成するバックアップファイルのフォーマット)
**/*.rs.bk


## 3. Editor level

## SublimeText
## -----------------------------------------------------------------------
# Cache files for SublimeText
*.tmlanguage.cache
*.tmPreferences.cache
*.stTheme.cache

# SublimeText's workspace files are user-specific
*.sublime-workspace

# SublimeText's project files should be checked into the repository,
# unless a significant proportion of contributors will probably not be
# using SublimeText. 
# SublimeText のプロジェクト構成ファイルはリポジトリにアクセスする人それぞれで
# 環境が違うはずなので、リポジトリに入れちゃダメなのだと思う
# *.sublime-project

# SublimeText SFTP configuration file
sftp-config.json

# SublimeText package control specific files
Package Control.last-run
Package Control.ca-list
Package Control.ca-bundle
Package Control.system-ca-bundle
Package Control.cache/
Package Control.ca-certs/
Package Control.merged-ca-bundle/
Package Control.user-ca-bundle
oscrypto-ca-bundle.crt
bh_unicode_properties.cache

# SublimeText-github package stores a github token in this file
# https://packagecontrol.io/packages/sublime-github
Github.sublime-settings

## Vim, Vi (, and a little emacs)
## -----------------------------------------------------------------------
# vim swap files
[._]*.s[a-v][a-z]
[._]*.sw[a-p]
[._]s[a-rt-v][a-z]
[._]ss[a-gi-z]
[._]sw[a-p]
# 想像以上にルールが雑だな

# Vim Session
Session.vim

# Naming convention of temporary files made with Console editor  
.netrwhist
# linux の OSレベルで止めているので、ここではコメントアウト
#*~

# Auto-generated tag files
tags

# Persistent undo
[._]*.un~


## VisualStudioCode
## -----------------------------------------------------------------------
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json

# VisualStudioCode Patch ignores all local history of files
.history


## 4. middleware-level

## other version control system: SVN
## -----------------------------------------------------------------------
.svn/